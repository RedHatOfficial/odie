config_files:
  - env.yml
  - odie.yml
  - build.yml
  - secret.yml
  - certs.yml
  - custom.yml

status:
  - active
  - commented
  - deprecated   # these will be removed in upcoming release
  - absent       # these lines will be removed from existing config

# tag::syntax-example[]
version:
  0.1.0:
    properties:
# end::syntax-example[]
      - name: Wildcard DNS
        prefix: 10210
        yml_file: env.yml
        header_text:
        props:
          default_subdomain: openshift.example.com
        description_text: |-
          The default subdomain is used for the wildcard DNS routing.  This is used only
          as the default routes.  If preferred, administrators have the ability to
          explicity define DNS entries and not rely upon a wildcard.
        footer_text:
        required: true
        status: active
# tag::syntax-example[]


      - name: Default Networking Settings
        prefix: 10001
        yml_file: env.yml
        props:
          gateway: 192.168.124.1
          netmask: 255.255.255.0
          dns: 192.168.124.1
        header_text:
        description_text: |-
          Networking defaults used to determine the static IP assignments during the
          kickstart generation.  Optionally, these can be determined on a per-host
          basis via the hosts.csv file
        footer_text:
        required: false
        status: active
# end::syntax-example[]


      - name: YUM Repository
        required: false
        status: active
        prefix: 10100
        yml_file: env.yml
        props:
          my_repo_host: 192.168.1.1
        header_text:
        description_text: |-
            The YUM Repository configured for this disconnected environment on the JumpHost.
            This repository is automatically configured via the "odie setup" during the JumpHost.

            If not set, this is defaulted to the primary IP of the jumphost

            Depending on the site, you may wish to host the YUM repository on a dedicated host
            or repurpose an JumpHost.  You can point to that server here:

        footer_text:

      - name: RHEL User Credentials
        yml_file: secret.yml
        prefix: 10000
        description_text: |-
          These are the user name and passwords for the RHEL systems.

          NOTE:  It is important that passwords properly confomrm with the following DoD Requirements.
          Failure will result in your cluster being in-accessible.  The default passwords
          are STIG compliant.

          * The password must contain at least one from each of the following character classes:
             Uppercase letter/s
             Lowercase letter/s
             Base-10 digit/s
             Nonalpanumeric special character/s
          * The password may have no have more than four consecutive characters from the same class.
          * The password may have no have more than two consecutive same characters.
          * The password must container at least 15 total characters.
        props:
          my_root_password: P@44W0r%@*R%y5er
          my_password_salt: 8jS7s6Ss7
          my_username: admin
          my_password: P@44W0r%@*R%y5er
        header_text:
        footer_text:
        required: true
        status: active

      - name: OpenShift User Credentials
        prefix: 10005
        yml_file: secret.yml
        props:
          admin_username: ocpadmin
          admin_password: ocp_adminPa55!
        header_text:
        description_text: |-
          Username and password for the primary admin account to be created
          on the OpenShift cluster (not in the Linux users )
        footer_text:
        required: true
        status: active

      - name: OpenShift Deployment Options
        yml_file: odie.yml
        prefix: 11000
        description_text: |-
          These options determine the actions taken by the OCP Deployment roles.

          These are the primary installation options and typically should not be modified
        props:
          deploy_openshift: true
          install_openshift: true
          deploy_registry: true
        header_text:
        footer_text:
        required: true
        status: active

      - name: HTPasswd
        yml_file: odie.yml
        prefix: 11001
        description_text: |-
          Configure the OpenShift authentication using username / password

          These accounts are required if the PIV Proxy is not installed

        props:
          setup_htpasswd_accounts: false
        header_text:
        footer_text:
        required: true
        status: active

      - name: Default NTP Server
        yml_file: env.yml
        prefix: 20001
        description_text: |-
          It is very important that all OpenShift components have clocks that are
          synchronized using NTP.  This option will disable the default Red Hat
          NTP pool and point at the specified IP.
        props:
          configure_ntp_clients: no
          ntp_server: 192.168.200.1
        header_text:
        footer_text:
        required: false
        status: active

      - name: Deploy OpenShift Logging
        yml_file: odie.yml
        prefix: 11100
        props:
          deploy_logging: false
        header_text:
        description_text: |-
          Deploy the integrated logging system based on the EFK stack :
            (E)lasticSearch,(F)luentd,(K)ibana

        footer_text:
        required: true
        status: active

      - name: OpenShift Metrics
        yml_file: odie.yml
        prefix: 11200
        props:
          deploy_metrics: false
        header_text:
        description_text: |-
          Deploys a subsystem to monitor PODs for utilization (e.g. CPU, memory,
          network, etc). ** deprecated **
        footer_text:
        required: true
        status: active

      - name: Audit Log
        yml_file: odie.yml
        prefix: 12001
        props:
          enable_audit_log: true
        header_text:
        description_text: |-
          This configures the retention and verbosity requirements on the Master nodes to
            conform to the DISA STIG requirements.

            Log file: /var/log/oscp-audit/oscp-audit.log

        footer_text:
        required: true
        status: active


    # EFK Configuration
      - name: Logging Host Path
        prefix: 11121
        yml_file: odie.yml
        header_text:
        required: false
        status: active
        description_text: |-
          The location on the infra nodes where the logs are stored in ElasticSearch
        props:
          logging_host_path: /var/efk-logs

      - name: Logging ElasticSearch Replica Count
        prefix: 11122
        yml_file: odie.yml
        header_text:
        required: false
        status: active
        description_text: |-
          The number of ElasticSearch replicas to deploy (defaults to the same number of infra nodes)
        props:
          logging_elasticsearch_replica_count: 3


    # Rsyslog
      - name: Setup rsyslog
        required: false
        prefix: 11300
        yml_file: odie.yml
        header_text:
        description_text: |-
          The setup of rsyslog exporting defaults to OFF. You must uncomment this variable
          and set it to 'true' to enable rsyslog exporting.
        props:
          setup_rsyslog_export: true

      - name: Setup Remote rsyslog server
        required: false
        prefix: 11301
        yml_file: odie.yml
        header_text:
        description_text: |-
          Configure a rsyslog server on the host defined by rsyslog_export_hostname

          External rsyslog server to export to. This MUST BE UNCOMMENTED AND
          SET manually if setup_rsyslog_export is set to 'true' as there
          is no default.
        props:
          setup_rsyslog_remote_server: true
          remote_rsyslog_export_hostname: rsyslog.lab.local

      - name: Remote rsyslog log file storage location
        required: false
        prefix: 11302
        yml_file: odie.yml
        header_text:
        description_text: |-
          Configure a remote system log storage location
        props:
          remote_rsyslog_files: /var/log/hosts/

      - name: rsyslog protocol
        required: true
        prefix: 11304
        yml_file: custom.yml
        header_text:
        description_text: |-
          The protocol to use for the external rsyslogd server
        props:
          rsyslog_export_protocol: "udp"
          rsyslog_export_port: 514

      - name: Rsyslog Var Log Size
        required: true
        prefix: 11305
        yml_file: custom.yml
        header_text:
        description_text: |-
          The size of each `/var/log/messages` file (5 of these will be kept) ** custom rotation is deprecated **
        props:
          rsyslog_var_log_size: 52428800



    # Main Directories

      - name: ODIE Root Source Dir
        yml_file: custom.yml
        prefix: 21000
        header_text:
        description_text: |-
          The primary directories for ODIE
        props:
          odie_root_dir: /opt/odie/
          odie_src_dir: '"<<odie_root_dir>>/src"'
        required: true

      - name: ODIE Inventory Dir
        yml_file: custom.yml
        prefix: 21001
        header_text:
        description_text: |-
          The inventory directory contains various important configuration for the ODIE
          system including the property files.

          This directory contains a combination of generated files, dynamic inventory
          scripts, and static configuration file.  Please review the header for each
          file to determine whether it is intended to be modified by the end user.

          Also, if this is modified from the default, you will need to update your
          ansible.cfg file to point at the appropriate location.
        props:
          odie_inventory_dir: '"<<odie_src_dir>>/inventory"'
          odie_output_dir: '"<<odie_src_dir>>/output"'
        required: true
        status: active

      - name: ODIE Internal Directories
        prefix: 21007
        yml_file: custom.yml
        header_text:
        description_text: |-
          These define the locations for various key directories within ODIE.

          These all derive from the base odie_src_dir location.  Typically these
          will not need to be modified unless you are developing ODIE.
        props:
          odie_contrib_bin: '"<<odie_src_dir>>/contrib/bin"'
          odie_properties_output_dir: '"<<odie_root_dir>>/config"'
          odie_images_dir: '"<<odie_output_dir>>/images"'
        required: true
        status: active

      - name: ODIE Properties Backup
        yml_file: custom.yml
        prefix: 10010
        header_text:
        description_text: |-
          Make a copy of the properties file when updating properties.
        props:
          odie_properties_backup: yes
        required: false
        status: active

      - name: Kickstart Output Dir
        yml_file: custom.yml
        prefix: 21050
        props:
          kickstart_dir: /opt/odie/kickstart
        header_text:
        description_text: |-
          Location of the Kickstart files generated by "odie generate"

          This location is symlinked to /var/www/html and is accessible via Apache HTTPD
        footer_text:
        required: true
        status: active

      - name: Docker Registry Credentials
        yml_file: secrets.yml
        prefix: 12000
        header_text:
        description_text: |-
          The credentials to use when authenticating to 3rd party registries
        props:
          credentials: |-

              ocp:
                username: 'ocpadmin'
                password: 'admin'

        required: true
        status: absent

      - name: OCP Clean Deploy
        prefix: 25000
        required: true
        status: active
        yml_file: custom.yml
        header_text:
        description_text: |-
          Remove the images on the registry server and force the re-ingestion of the Docker image TARs
        props:
          clean_deploy: false

      - name: OCP Standalone Registry
        required: false
        status: active
        yml_file: env.yml
        prefix: 20000
        header_text:
        description_text: |-
          Where is your registry located. By default, this role is executed directly on the standalone
          registry so localhost is appropriate here.  If you are using another external registry you
          can override this.
        props:
          cluster_registry: localhost:5000

      # DNSMasq

      - name: DHCP Server
        prefix: 11200
        yml_file: odie.yml
        header_text:
        required: false
        status: active
        description_text: |-
          Enable dnsmasq to serve a DHCP server to the ODIE cluster

          The DHCP range must be defined.
        props:
          enable_dhcp: false
          ip_range_start: '172.27.168.100'
          ip_range_end: '172.27.168.200'

      - name: PXE Server
        prefix: 11203
        yml_file: odie.yml
        header_text:
        required: false
        status: active
        description_text: |-
          Launch a PXE boot server to support network booting of the ODIE environment
        props:
          enable_pxe: true


      - name: Secondary DHCP IP
        prefix: 11202
        yml_file: odie.yml
        header_text:
        required: false
        status: active
        description_text: |-
          Define a secondory temporary to be assigned during the installation
          It should be on the same subnet as the JumpHost.
        props:
          temp_dhcp_ip: '172.27.168.1'

      # Advanced Stuff
      - name: Network RPMs
        prefix: 25002
        yml_file: custom.yml
        header_text:
        required: false
        status: active
        description_text: |-
          If you are booting from the DVD, you can use the RPMs from the
          JumpHost.  This will ensure the hosts are installed with the latest patches.
        props:
          kickstart_media: true


      - name: Secured Ansible Connection
        required: false
        status: active
        yml_file: custom.yml
        prefix: 25100
        header_text:
        description_text: |-
          This determines the user that is used to connect from SSH.

          NOTE: this is enabled during the "harden" phase of the installation process..
                It is not necessary to directly modify this option.
        props:
          ansible_ssh_user: admin


      # Partition sizes
      - name: Root Partition
        required: false
        prefix: 21000
        yml_file: env.yml
        header_text:
        description_text: |-
          Size of the root (/) partition
        props:
          partition_root: 35000

      - name: Home Partition
        required: false
        prefix: 21001
        yml_file: env.yml
        header_text:
        description_text: |-
          Size of the home (/home) partition
        props:
          partition_home: 10000


      - name: Tmp Partition
        required: false
        prefix: 21002
        yml_file: env.yml
        header_text:
        description_text: |-
          Size of the tmp (/tmp) partition
        props:
          partition_tmp: 10000

      - name: Var Partition
        required: false
        prefix: 21003
        yml_file: env.yml
        header_text:
        description_text: |-
          Size of the var (/var) partition
        props:
          partition_var: 40000

      - name: Log Partition
        required: false
        prefix: 21004
        yml_file: env.yml
        header_text:
        description_text: |-
          Size of the log (/var/log) partition
        props:
          partition_var_log: 20000

      - name: Audit Log Partition
        required: false
        prefix: 21005
        yml_file: env.yml
        header_text:
        description_text: |-
          Size of the audit log (/var/log/audit) partition
        props:
          partition_var_log_audit: 20000

      - name: Swap Partition
        required: false
        prefix: 21006
        yml_file: env.yml
        header_text:
        description_text: |-
          Size of the swap partition
        props:
          partition_swap: 8000

      - name: OCP Version Number
        yml_file: custom.yml
        prefix: 25000
        header_text:
        required: false
        status: active
        description_text: |-
          The version of OCP to install.  This normally does not need to be modified
          unless specifically instructed to do so as part of an upgrade.
        props:
          ocp_version: 3.11.16
          ocp_short_version: 3.11

      - name: KVM Variables
        yml_file: build.yml
        header_text:
        required: false
        status: active
        description_text: |-
          These variables are used by the development playbooks to configure local KVM clusters
        props:
          bridge_name: virbr0
          domain_name: lab.local

      - name: OpenShift CNS
        yml_file: odie.yml
        prefix: 11400
        props:
          deploy_cns: false
        header_text:
        description_text: |-
          Dynamically provision storage via Gluster

          Requires an empty third disk and modification to the hosts.csv (see User Guide)

        footer_text:
        required: true
        status: active

      - name: CloudForms
        yml_file: odie.yml
        prefix: 11500
        props:
          deploy_cloudforms: false
        header_text:
        description_text: |-
          Install Cloudforms Management Engine (tech preview)

        footer_text:
        required: true
        status: active

      - name: LUKS Pass Phrase
        yml_file: secret.yml
        prefix: 10400
        header_text:
        required: false
        status: active
        description_text: |-
          This passphrase is used in the LUKS disk encryption.  This will be entered on boot of the system.

          If this value is not defined, LUKS is not enabled
        props:
          luks_passphrase: change_this_default_passphrase


      - name: Metrics Host Path
        prefix: 11231
        yml_file: odie.yml
        header_text:
        required: false
        status: active
        description_text: |-
          The location on the infra nodes where the metrics metadata is stored
        props:
          metrics_host_path: /var/hawkular-metrics


      - name: Metrics Cassandra Replica Count
        prefix: 11232
        yml_file: odie.yml
        header_text:
        required: false
        status: active
        description_text: |-
          The number of Cassandra replicas to deploy (defaults to the same number of infra nodes)
        props:
          metrics_cassandra_replica_count: 3

      - name: RHEL ISO Location
        prefix: 15000
        yml_file: build.yml
        header_text:
        required: true
        status: active
        description_text: |-
          This ISO is used during the build process via the stage-rhel-iso.sh script
        props:
          rhel_iso: /root/rhel-server-7.5-x86_64-dvd.iso

      - name: OpenShift Web Console Certificates
        prefix: 10000
        yml_file: certs.yml
        header_text:
        required: false
        status: active
        description_text: |-
          These files are used to configure the OpenShift Web Console SSL settings. If
          this is left blank, the OpenShift web console will be secured with the default
          generated certificates that will not be signed by a trusted CA, therfore SSL
          errors may be thrown by the browser. These must be PEM format.
        props:
          openshift_console_ca_file: /opt/odie/config/certs/ca.crt
          openshift_console_certfile: /opt/odie/config/certs/lbnfs-hostname.crt
          openshift_console_keyfile: /opt/odie/config/certs/lbnfs-hostname.key

      - name: Docker Registry Certificates
        prefix: 10100
        yml_file: certs.yml
        header_text:
        required: false
        status: active
        description_text: |-
          These files are used to configure the OpenShift Docker Registry that is used to
          facilitate builds and deployments in OpenShift. This will secure the route that
          is exposed to allow docker images to pull and push to the docker registry. If this
          is not set, a defaulted generate certificate will be presented by the registry
          that is not signed by a trusted CA. These must be PEM format.
        props:
          docker_registry_ca_file: /opt/odie/config/certs/ca.crt
          docker_registry_certfile: /opt/odie/config/certs/docker-registry.crt
          docker_registry_keyfile: /opt/odie/config/certs/docker-registry.key


      - name: PIV Proxy Certificates
        prefix: 10200
        yml_file: certs.yml
        header_text:
        required: false
        status: active
        description_text: |-
          These certificates are used to establish the trustchain for the PIV proxy.  This is used
          when authenticating to the web interface. The root cert is in P7B format, while the
          others are in PEM format.
        props:
          pivproxy_ca_file: "/opt/odie/config/certs/ca.pem.p7b"
          pivproxy_hostname_cert: "/opt/odie/config/certs/pivproxy.crt"
          pivproxy_hostname_key: "/opt/odie/config/certs/pivproxy.key"


      - name: PIV Proxy Install
        prefix: 12000
        yml_file: odie.yml
        header_text:
        required: false
        status: active
        description_text: |-
          Install the PIV proxy to secure logins to the web console using CAC cards or SIPR tokens

          This proxy is installed during the *odie harden* operation.  It will disable the password login

          Must specify the certificiates in certs.yml
        props:
          install_piv_proxy: True

      - name: PIV Proxy OCP Cluster Admins
        prefix: 20000
        yml_file: secret.yml
        header_text:
        required: false
        status: active
        description_text: |-
          After authenticating via the pivproxy the user will have no access to the system.

          Define a list of users that well receive full cluster-admin access

        props:
          openshift_cluster_admins: |-

             #- example_admin_user1
             #- example_admin_user2
             #- example_admin_user3

      - name: PIV Proxy OCP Read Only
        prefix: 20000
        yml_file: secret.yml
        header_text:
        required: false
        status: active
        description_text: |-
          After authenticating via the pivproxy the user will have no access to the system.

          Define a list of users that well receive read-only access to all the projects

        props:
          openshift_read_only_users: |-

             #- example_readonly_user1
             #- example_readonly_user2
             #- example_readonly_user3

      - name: Registry Web Console Certificates
        prefix: 10300
        yml_file: certs.yml
        header_text:
        required: false
        status: active
        description_text: |-
          These files are used to configure the OpenShift Registry Web Console SSL settings.
          If this is left blank, the OpenShift web console will be secured with the default
          generated certificates that will not be signed by a trusted CA, therfore SSL
          errors may be thrown by the browser. These must be PEM format.
        props:
          registry_console_ca_file: /opt/odie/config/certs/ca.crt
          registry_console_certfile: /opt/odie/config/certs/registry-console-default.crt
          registry_console_keyfile: /opt/odie/config/certs/registry-console-default.key

      - name: Registry Web Console Certificates
        prefix: 10400
        yml_file: certs.yml
        header_text:
        required: false
        status: active
        description_text: |-
          These files are used to configure the OpenShift Hawkular Metrics Web Console SSL settings.
          If this is left blank, the OpenShift Hawkular Metrics web console will be secured with
          the default generated certificates that will not be signed by a trusted CA, therfore SSL
          errors may be thrown by the browser. These must be PEM format.
          openshift_metrics_hawkular_cert - The public certificate for the console. The certificate
          must contain the host name used by the route.
          openshift_metrics_hawkular_key - The key file used with the openshift_metrics_hawkular_cert
          openshift_metrics_hawkular_ca - The certificate authority (CA) file used to sign openshift_metrics_hawkular_cert
        props:
          openshift_metrics_hawkular_cert: /opt/odie/config/certs/hawkular-metrics.crt
          openshift_metrics_hawkular_key: /opt/odie/config/certs/hawkular-metrics.key
          openshift_metrics_hawkular_ca: /opt/odie/config/certs/ca.crt

      - name: JumpHost SSH Hosts
        prefix: 2000
        yml_file: env.yml
        header_text:
        required: true
        status: active
        description_text: |-
          This is a ip address or ip address range that will be allowed to ssh into the JumpHost
          server. The syntax is the same as if passed into the linux firewalld command, e.x.
              firewalld-cmd --zone=public --add-source=192.168.124.1/24
        props:
          jumphost_ssh_hosts: 192.168.124.1/24


      - name: Variablized Compression
        prefix: 25010
        yml_file: custom.yml
        header_text:
        description_text: |-
           Compression utilities and arguments have been variablized to allow 
           changing of compression utilities for ISO size.  Default is xz for
           better compression than gzip or bzip2, is supported by Docker load,
           and is quick to decompress. 
        props:
          compress_type: 'xz'
          compress_ext: 'xz'
          compress_cmd: 'xz'
          compress_args: '-e -3 -T0'
          uncompress_cmd: 'xz'
          uncompress_args: '-d -T0'
        required: true
        status: active


  0.9.1:
    properties:
      - name: ODIE Host Directory Locations
        prefix: 2000
        yml_file: build.yml
        header_text:
        required: false
        status: active
        description_text: |-
          Specify the location of these directories on your host system and they will be mounted via NFS into the JumpHost

        props:
          odie_dist_src: /opt/odie/dist
          odie_source_src: /opt/odie/src
          odie_config_src: /opt/odie/config

  0.9.2:
    properties:
      - name: Enable FIPS
        prefix: 12001
        yml_file: odie.yml
        header_text:
        required: true
        status: active
        description_text: |-
          Whether to add the 'fips=1' flag to the grub line on startup
        props:
          enable_fips: True

      - name: Enable LUKS
        prefix: 12001
        yml_file: odie.yml
        header_text:
        required: true
        status: active
        description_text: |-
          Whether the

          You need to set the value in secret.yml and use the GUI installation method.
        props:
          enable_luks: True

      - name: Registry Host
        yml_file: env.yml
        header_text:
        required: false
        status: active
        description_text: |-
          The docker registry host to use during the OCP installation

        props:
          regisry_fqdn: jumphost01.lab.local:5000
