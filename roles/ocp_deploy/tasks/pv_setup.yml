# Ansible does not support with_subelement - https://github.com/ansible/ansible/issues/13262
# To get around this, you need to have multiple include statements
---
  - debug:
      var: groups['lb'][0]

  - name: Setup Facts
    set_fact:
      pv_name: "pv-{{project.name}}-{{pv}}"
      templates_dir: "/opt/odie/ocp_templates"
      jumphost: localhost

  - name: Setup Facts
    set_fact:
      nfs_hostname: "{{groups['lb'][0]}}"
      nfs_directory: "/ocp/pvs/{{pv_name}}"
      nfs_mount_state: "{{ nfs_mount_state | default('mounted') }}"
      pv_yaml: "{{templates_dir}}/{{pv_name}}.yml"
      volsize: 5G
      accessmodes: ReadWriteOnce

  - name: NFS Directory Creation
    file:
      path: "{{ nfs_directory }}"
      state: directory
      mode: 0777
    delegate_to: "{{nfs_hostname}}"

  - name: Template Directory Creation
    file:
      path: "{{templates_dir}}"
      state: directory
    delegate_to: "{{ jumphost }}"

  - name: Setup YAML
    template:
      src: templates/pv.j2
      dest: "{{pv_yaml}}"
      mode: 0644
    delegate_to: "{{ jumphost }}"

  - name: Check whether PV already exists
    command: "oc get pv/{{pv_name}} -n {{project.name}}"
    ignore_errors: yes
    register: oc_status
    delegate_to: "{{ jumphost }}"

  - name: Creating {{pv_name}} PV
    command: "oc create -f {{pv_yaml}} -n {{project.name}}"
    when: oc_status.rc == 1
    delegate_to: "{{ jumphost }}"

  # This should succeed now
  - name: Sanity Check {{pv_name}} creation
    command: "oc get pv/{{pv_name}} -n {{project.name}}"
    delegate_to: "{{ jumphost }}"

  - name: Unmount the {{ jumphost_dir }} NFS volume
    mount:
      name: "{{ jumphost_dir }}"
      state: unmounted
    ignore_errors: true
    delegate_to: "{{ jumphost }}"

  - name: Mount {{ jumphost_dir }}
    mount:
      name: "{{jumphost_dir}}"
      src: "{{nfs_hostname}}:{{nfs_directory}}"
      fstype: nfs
      state: "{{nfs_mount_state}}"
      opts: "noauto,nodev,nosuid"
    delegate_to: "{{jumphost}}"
