
- name: Install DNSMasq
  yum:
    name: dnsmasq
    state: latest
  notify: 
    - restart_dnsmasq

- name: Add secondary IP address to ethernet interface
  command: "ip addr add {{ temp_dhcp_ip }}/24 dev {{ ansible_default_ipv4.interface }}"
  ignore_errors: true
  when: temp_dhcp_ip is defined

- name: Setup FW for DHCP
  firewalld:
    service: dhcp
    state: enabled
    immediate: yes
    permanent: yes
  when: enable_dhcp

- name: Enable PXE 
  when: enable_pxe
  block: 
  - name: Setup FW for TFTP
    firewalld:
      service: tftp
      state: enabled
      immediate: yes
      permanent: yes

  - name: Setup selinux context
    shell: |
      semanage fcontext -a -t httpd_sys_content_t "/opt/odie/install_media(/.*)?"
      restorecon -R /opt/odie/install_media/

  - name: Create symlink
    file:
      src: /opt/odie/install_media
      dest: /var/www/html/media
      state: link

  - name: Create Temporary project
    command: mktemp -d 
    register: tmp

  - set_fact:
      cpio_dir: "{{tmp.stdout}}"
    notify: 
      - delete_cpio

  - name: Extract the RPM
    shell: "rpm2cpio /opt/odie/repo/odie-custom/syslinux-4.05-15.el7.x86_64.rpm  | cpio -dimv"
    args:
      chdir: "{{cpio_dir}}"

  - name: Create TFTP Directories
    file:
      path: "{{item}}"
      state: directory
      recurse: yes
    with_items:
      - "{{tftp_root}}/pxelinux/images/RHEL-7.5"
      - "{{tftp_root}}/images/RHEL-7.5"
      - "{{tftp_root}}/pxelinux/pxelinux.cfg"

  - name: Copy TFTP Artifacts
    copy:
      src: "{{item.src}}"
      dest: "{{item.dest}}"
      directory_mode: true
    with_items:
      - { src: "{{rhel_mount}}/images/pxeboot/vmlinuz", dest: "{{tftp_root}}/pxelinux/images/RHEL-7.5/vmlinuz"}
      - { src: "{{rhel_mount}}/images/pxeboot/initrd.img", dest: "{{tftp_root}}/pxelinux/images/RHEL-7.5/initrd.img"}
      - { src: "{{rhel_mount}}/images/pxeboot/vmlinuz", dest: "{{tftp_root}}/images/RHEL-7.5/vmlinuz"}
      - { src: "{{rhel_mount}}/images/pxeboot/initrd.img", dest: "{{tftp_root}}/images/RHEL-7.5/initrd.img"}
      - { src: "{{cpio_dir}}/usr/share/syslinux/pxelinux.0",  dest: "{{tftp_root}}/pxelinux/pxelinux.0"}
      - { src: "{{cpio_dir}}/usr/share/syslinux/vesamenu.c32",  dest: "{{tftp_root}}/pxelinux/vesamenu.c32"}

- name: Enable DHCP
  debug:
    var: enable_dhcp

- name: Prepare DNSConfg
  copy:
    content: |-
      listen-address={{listen_address}}
      bind-interfaces

      {% if 'infra' in groups and groups['infra'][0] is defined %}
      address=/.{{default_subdomain}}/{{hostvars[groups['infra'][0]].ip}}
      {% endif %}

      {% if enable_dhcp %}
      expand-hosts
      domain=dhcp-subnet
      dhcp-range={{ip_range_start}},{{ip_range_end}},12h
      {% if jumphost_mac_address is defined and 'jumphost' in groups and groups['jumphost'][0] is defined %}
      dhcp-host={{ jumphost_mac_address }},{{hostvars[groups['jumphost'][0]].hostname}},{{hostvars[groups['jumphost'][0]].ip}},infinite
      {% endif %}

      {% if enable_pxe %}
      dhcp-boot=pxelinux/pxelinux.0
      enable-tftp
      tftp-root={{tftp_root}}
      {% endif %}

      {% endif %}

    dest: /etc/dnsmasq.conf
  notify:
    - restart_dnsmasq

- name: Setup menu per VM - PXE Hex IP convention
  copy:
    content: |-
      default vesamenu.c32
      #prompt 1
      timeout 30

      display boot.msg

      label {{item}}
        menu label Install {{item}}
        menu default
        kernel images/RHEL-7.5/vmlinuz
        append initrd=images/RHEL-7.5/initrd.img ip=dhcp inst.repo=http://{{my_repo_host}}/media  inst.ks=http://{{my_repo_host}}/pub/{{item}}.cfg fips=1

    dest: "{{tftp_root}}/pxelinux/pxelinux.cfg/{% for i in hostvars[item].ip.split('.') %}{{ '%02X'|format(i|int) }}{% endfor %}"
  with_items: "{{ groups['all'] }}"
  when: enable_pxe

- name: Setup menu per VM - PXE MAC Address convention
  copy:
    content: |-
      default vesamenu.c32
      #prompt 1
      timeout 30

      display boot.msg

      label {{item}}
        menu label Install {{item}}
        menu default
        kernel images/RHEL-7.5/vmlinuz
        append initrd=images/RHEL-7.5/initrd.img ip=dhcp inst.repo=http://{{my_repo_host}}/media  inst.ks=http://{{my_repo_host}}/pub/{{item}}.cfg fips=1

    dest: "{{tftp_root}}/pxelinux/pxelinux.cfg/01{% for i in hostvars[item].mac.split(':') %}-{{ i }}{% endfor %}"
  with_items: "{{ groups['all'] }}"
  when: enable_pxe and "mac" in hostvars[hostvars | first]

- name: Set the Kickstart to use network media
  set_fact:
    kickstart_media: True
  when: enable_pxe


