apiVersion: v1
kind: Template
labels:
  release: v1
  template: odie-postgresql-runtime-objects
metadata:
  name: "odie-postgresql-runtime-objects"
  annotations:
    description: '${APPLICATION_NAME} PostgreSQL STIG Runtime Objects'
    iconClass: icon-shadowman
    tags: odie
    version: v1
objects:
- apiVersion: v1
  kind: Secret
  labels:
    app: ${APPLICATION_NAME}
  metadata:
    name: ${APPLICATION_NAME}-postgresql
  stringData:
    DB_PASSWORD: '${DB_PASSWORD}'
    DB_ADMIN_PASSWORD: '${DB_ADMIN_PASSWORD}'
- apiVersion: v1
  kind: ConfigMap
  labels:
    app: ${APPLICATION_NAME}
  metadata:
    name: ${APPLICATION_NAME}-postgres-config-replacements
  data:
    postgres-config-replacements: |
      config_line_begins = 'replacement value'
      statement_timeout = 30000
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The database servers port.
    labels:
      app: ${APPLICATION_NAME}
      component: postgresql
    name: ${APPLICATION_NAME}-postgresql
  spec:
    ports:
    - port: 5432
      targetPort: 5432
    selector:
      deploymentConfig: ${APPLICATION_NAME}-postgresql
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-postgresql
    selfLink: /api/v1/namespaces//persistentvolumeclaims/${APPLICATION_NAME}-postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}-postgresql
        project: ${PROJECT_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-postgresql
  spec:
    pause: true
    replicas: 1
    restartPolicy: Always
    selector:
      deploymentConfig: ${APPLICATION_NAME}-postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}-postgresql
          deploymentConfig: ${APPLICATION_NAME}-postgresql
        name: ${APPLICATION_NAME}-postgresql
      spec:
        initContainers:
        - name: ${APPLICATION_NAME}-init-stig-postgresql
          image: ${IMAGE_NAME}
          command: ['run-postgresql', '--version']
          env:
          - name: POSTGRESQL_USER
            value: ${DB_USERNAME}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: '${APPLICATION_NAME}-postgresql'
                key: DB_PASSWORD
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: '${APPLICATION_NAME}-postgresql'
                key: DB_ADMIN_PASSWORD
          - name: POSTGRESQL_DATABASE
            value: 'dbms'
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: ${MAX_CONNECTIONS}
          volumeMounts:
          - name: ${APPLICATION_NAME}-postgresql-data
            mountPath: /var/lib/pgsql/data
          - name: ${APPLICATION_NAME}-postgresql-files-volume
            mountPath: /security/ssl
            readOnly: true
          - mountPath: /var/lib/pgsql/overrides
            name: ${APPLICATION_NAME}-postgres-config-replacements-volume
        containers:
        - name: ${APPLICATION_NAME}-postgresql
          image: ${IMAGE_NAME}
          imagePullPolicy: Always
          ports:
          - containerPort: 5432
            protocol: TCP
          env:
          - name: POSTGRESQL_USER
            value: ${DB_USERNAME}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: '${APPLICATION_NAME}-postgresql'
                key: DB_PASSWORD
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: '${APPLICATION_NAME}-postgresql'
                key: DB_ADMIN_PASSWORD
          - name: POSTGRESQL_DATABASE
            value: 'dbms'
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: ${MAX_CONNECTIONS}
          volumeMounts:
          - name: ${APPLICATION_NAME}-postgresql-data
            mountPath: /var/lib/pgsql/data
          - name: ${APPLICATION_NAME}-postgresql-files-volume
            mountPath: "/security/ssl"
            readOnly: true
          - mountPath: /var/lib/pgsql/overrides
            name: ${APPLICATION_NAME}-postgres-config-replacements-volume
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 4
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - '-c'
                - >-
                  psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d 'dbms' -c 'SELECT 1';
            initialDelaySeconds: 10
        terminationGracePeriodSeconds: 20
        volumes:
        - name: ${APPLICATION_NAME}-postgresql-data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-postgresql
        - name: ${APPLICATION_NAME}-postgresql-files-volume
          secret:
            secretName: ${APPLICATION_NAME}-postgresql-ssl-files
            defaultMode: 0600
        - name: ${APPLICATION_NAME}-postgres-config-replacements-volume
          optional: true
          configMap:
            name: ${APPLICATION_NAME}-postgres-config-replacements
            items:
              - key: postgres-config-replacements
                path: replacement.properties
    triggers:
    - type: ConfigChange
parameters:
- description: Project Name
  name: PROJECT_NAME
  required: true
- description: App Name
  name: APPLICATION_NAME
  required: true
- description: Service Account Name
  name: SERVICE_ACCOUNT_NAME
  required: true
- description: Database Port
  name: DB_PORT
  value: '5432'
- description: Database root database
  name: DB_DATABASE
  value: 'dbms'
- description: Database user name
  name: DB_USERNAME
  value: 'dbuser'
- description: Database user's password
  name: DB_PASSWORD
  from: '[\d\a]{1}[\w]{30}[\d\a]{1}'
  generate: expression
  required: true
- description: Password for the '${APPLICATION_NAME}' PostgreSQL administrative account
  name: DB_ADMIN_PASSWORD
  from: '[\d\a]{1}[\w]{30}[\d\a]{1}'
  generate: expression
  required: true
- description: Maximum number of client connections allowed
  name: MAX_CONNECTIONS
  required: true
  value: '100'
- description: Image name of the postgres image
  name: IMAGE_NAME
  required: true
  value: 'openshift/postgresql-95-rhel7-stig'
