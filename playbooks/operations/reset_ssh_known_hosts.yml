#!/usr/bin/env  ansible-playbook
#
#   Reset SSH Known Hosts
#   ---------------------
#
#   This playbook is used when the VMs are recreated and the known hosts file on the 
#   JumpHost contains invalid, old entries.  
#
#   It is based on a playbook found on StackOverflow from Stepan Vavra
#     https://stackoverflow.com/questions/30226113/ansible-ssh-prompt-known-hosts-issue
#
---
- name: Reset known SSH knosts
  hosts: all
  connection: local

  vars:
    ssh_known_hosts_command: "ssh-keyscan -T 10"
    ssh_known_hosts_file: "{{ lookup('env','HOME') + '/.ssh/known_hosts' }}"
    ssh_known_hosts: "{{ [hostname] }}"


  tasks:

  - name: For each host, scan for its ssh public key
    shell: "ssh-keyscan {{ item }},`dig +short {{ item }}`"
    with_items: "{{ ssh_known_hosts }}"
    register: ssh_known_host_results
    ignore_errors: yes

  - name: Remove all existing keys in '{{ ssh_known_hosts_file }}'
    known_hosts:
      name: "{{ item.item }}"
      state: absent
    with_items: "{{ ssh_known_host_results.results }}"


  - name: Add/update the public key in the '{{ ssh_known_hosts_file }}'
    known_hosts:
      name: "{{ item.item }}"
      key: "{{ item.stdout }}"
      path: "{{ ssh_known_hosts_file }}"
    with_items: "{{ ssh_known_host_results.results }}"

  - name: Create temp file
    command: "mktemp"
    register: temp

  - debug:
      var: temp
      var: my_root_password

  - name: Setup Root Password File
    copy:
      dest: "{{temp.stdout}}"
      content: "{{my_root_password}}"

  - name: Adding Authorized Key for root
    shell: "/bin/sshpass -f {{ temp.stdout }} ssh-copy-id -f root@{{hostname}}"

  - name: Remove temp file
    file:
      path: "{{temp.stdout}}"
      state: absent